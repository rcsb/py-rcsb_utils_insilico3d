##
# File:    mergeHoldingsFiles.py
# Author:  Dennis Piehl (with ChatGPT assistance)
# Date:    20-Oct-2025
##
"""
Script for merging the resulting holdings files generated by `runModelProviderWorkflow.py`.

For use with FTP-based AlphaFold downloads only, since this will merge all AF and MA holdings into a single file;
whereas we won't want to do that for the 200M from Google Cloud.
"""

import os
import shutil
import gzip
import datetime
from rcsb.utils.io.MarshalUtil import MarshalUtil

mU = MarshalUtil()

# === Paths ===
baseDir = "/mnt/vdb1/computed-models/CSM1/holdings"
holdingsListPath = os.path.join(baseDir, "computed-models-holdings-list.json")

afHoldingsPath = os.path.join(baseDir, "alphafold-ftp-holdings.json.gz")
maHoldingsPath = os.path.join(baseDir, "modelarchive-holdings.json.gz")
mergedHoldingsPathUnzip = os.path.join(baseDir, "computed-models-holdings.json")
mergedHoldingsPathGz = mergedHoldingsPathUnzip + ".gz"

# === Step 1: Backup all JSON/JSON.GZ files ===
timestamp = datetime.datetime.now().strftime("%Y%m%d-%H%M%S")
backupDir = os.path.join(baseDir, f"backup-{timestamp}")
os.makedirs(backupDir, exist_ok=True)

for fname in os.listdir(baseDir):
    if fname.endswith(".json") or fname.endswith(".json.gz"):
        src = os.path.join(baseDir, fname)
        dst = os.path.join(backupDir, fname)
        shutil.copy2(src, dst)

print(f"Backed up existing files to: {backupDir}")

# === Step 2: Load and merge holdings ===
afD = mU.doImport(afHoldingsPath, fmt="json")
maD = mU.doImport(maHoldingsPath, fmt="json")

# Merge dictionaries (maD overrides afD on key conflict)
afD.update(maD)

# === Step 3: Export merged JSON (uncompressed) ===
mU.doExport(mergedHoldingsPathUnzip, afD, fmt="json")

# === Step 4: Gzip compress the merged JSON ===
with open(mergedHoldingsPathUnzip, "rb") as f_in:
    with gzip.open(mergedHoldingsPathGz, "wb") as f_out:
        shutil.copyfileobj(f_in, f_out)

print(f"Created gzipped merged file: {mergedHoldingsPathGz}")

# === Step 5: Write updated holdings list JSON ===
holdingsListD = {
    "holdings/computed-models-holdings.json.gz": len(afD)
}
mU.doExport(holdingsListPath, holdingsListD, fmt="json")

print(f"Updated holdings list written to: {holdingsListPath}")
